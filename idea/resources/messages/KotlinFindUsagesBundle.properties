kotlin.lang.class=class
kotlin.lang.companion.object=companion object
kotlin.lang.constructor=constructor
kotlin.lang.facade.class=facade class
kotlin.lang.for.property=for property
kotlin.lang.function=function
kotlin.lang.getter=getter
kotlin.lang.import.alias=import alias
kotlin.lang.interface=interface
kotlin.lang.label=label
kotlin.lang.lambda=lambda
kotlin.lang.object=object
kotlin.lang.parameter=parameter
kotlin.lang.property.accessor=property accessor
kotlin.lang.property=property
kotlin.lang.setter=setter
kotlin.lang.type.alias=type alias
kotlin.lang.type.parameter=type parameter
kotlin.lang.variable=variable
checkbox.name.expected.classes=Expected classes
class.name.anonymous=Anonymous
checkbox.name.expected.functions=Expected functions
text.find.usages.for.data.class.components.and.destruction.declarations=<p>Find usages for data class components and destruction declarations<br/>could be <a href="{0}">disabled once</a> or <a href="{1}">disabled for a project</a>.</p>
tool.tip.text.disable.search.for.data.class.components.and.destruction.declarations.project.wide.setting=Disable search for data class components and destruction declarations. (Project wide setting)
checkbox.text.fast.data.class.component.search=Fast data class component search
checkbox.name.expected.properties=Expected properties
action.text.find.usages.of=find usages of
type.named.argument=Named argument
type.type.alias=Type alias

find.usages.type.callable.reference = Callable reference
find.usages.type.type.constraint = Type constraint
find.usages.type.value.parameter.type = Parameter type
find.usages.type.nonLocal.property.type = Class/object property type
find.usages.type.function.return.type = Function return types
find.usages.type.superType = Supertype
find.usages.type.is = Target type of ''is'' operation
find.usages.type.class.object = Nested class/object
find.usages.type.companion.object = Companion object
find.usages.type.function.call = Function call
find.usages.type.implicit.get = Implicit ''get''
find.usages.type.implicit.set = Implicit ''set''
find.usages.type.implicit.invoke = Implicit 'invoke'
find.usages.type.implicit.iteration = Implicit iteration
find.usages.type.property.delegation = Property delegation
find.usages.type.extension.receiver.type = Extension receiver type
find.usages.type.super.type.qualifier = Super type qualifier
find.usages.type.receiver = Receiver
find.usages.type.delegate = Delegate
find.usages.type.packageDirective = Package directive
find.usages.type.packageMemberAccess = Package member access
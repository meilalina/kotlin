classpath.add.reflection=Add 'kotlin-reflect.jar' to the classpath
classpath.add.script.runtime=Add 'kotlin-script-runtime.jar' to the classpath
classpath.add.kotlin.test=Add 'kotlin-test.jar' to the classpath

scratch.clear.button=Clear results
scratch.inlay.output.mode=Inlay output mode\n\nThe output is shown in the code editor right next to the expression. Well suited for a short single-line output.
scratch.inlay.output.mode.description=Inlay output mode
scratch.side.panel.output.mode=Side panel output mode\n\nThe output is shown in the separate panel. Useful if the output is long or multi-line.
scratch.side.panel.output.mode.description=Side panel output mode

scratch.module.combobox=Use classpath of module
scratch.run.button=Run Scratch File
scratch.run.from.here.button=Run Scratch From Here
scratch.stop.button=Stop scratch execution

scratch.is.repl.checkbox=Use REPL
scratch.is.repl.checkbox.description=Runs in the Kotlin REPL. Executes only the new expressions added to the end of the scratch

scratch.is.interactive.checkbox=Interactive mode
scratch.is.interactive.checkbox.description=Runs after you stop typing for {0} seconds

scratch.make.before.run.checkbox=Make module before Run
scratch.make.before.run.checkbox.description=Make module {0} before running scratch. Only compiled code is reachable from this scope

incompatible.api.report=Report as Incompatible API
choose.module.modules={0}, {1} and <a href="#">{2,number,#} other modules</a>
choose.module.modules.with.kotlin=Modules with Kotlin Files

choose.path.title=Choose Destination Folder
choose.path.description=Choose folder

configure.kotlin.title=Configure Kotlin with {0}
configure.kotlin.find.maven.versions=Find Kotlin Maven plugin versions
configure.kotlin.loading=loading…
configure.kotlin.cant.load.versions=Couldn't load versions list from search.maven.org

copy.into.title=Copy Into…
copy.into.description=Choose folder where files will be copied

file.exists.single=File ''{0}'' already exists in {1}. Do you want to overwrite it?
file.exists=Files already exist: \n{0}\nDo you want to overwrite them?
file.overwrite.title=Overwrite file
file.overwrite.overwrite=Overwrite
file.overwrite.cancel=Cancel
file.destination.folder=Destination folder
file.error.new.folder=Error during folder creation: {0}
file.error.copy=Error during copying {0}

frameworks.remove.conflict.title=Framework Conflict
frameworks.remove.conflict.question=Current module is already configured with ''{0}'' framework.\nDo you want to remove it?

library.label.jvm=Kotlin runtime
library.label.javascript=Kotlin JS library

library.no.kotlin.library.title=No Kotlin Runtime Specified
library.no.kotlin.library.question=Do you want to continue with no Kotlin Runtime library?

run.configuration.error.no.module=Module not specified
run.configuration.error.no.main.class=No main class specified
run.configuration.error.class.not.found=Class ''{0}'' not found in module ''{1}''
run.configuration.error.class.no.main.method=Class ''{0}'' has no ''main()'' method
run.configuration.error.main.not.found=Function ''main()'' not found in class ''{0}''
run.configuration.error.main.not.found.top.level=Top-level function ''main()'' not found in package ''{0}''

script.choose.file=Choose script file

editor.editor.only=Editor only
editor.preview.only=Preview only
editor.editor.and.preview=Editor and preview